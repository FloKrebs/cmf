environment:
  PYPIPASSWORD:
    secure: LmtnXHQhfACj8oOpwYehsFPkdhPHGLq84SIqn+ixfS8=
  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.
    - PYTHON: "C:\\Python37-x64"
    - PYTHON: "C:\\Python35-x64"

    - PYTHON: "C:\\Python37"
    - PYTHON: "C:\\Python35"


install:
  # We need wheel installed to build wheels
  - "%PYTHON%\\python.exe -m pip install wheel --no-warn-script-location"
  - "%PYTHON%\\Scripts\\pip install numpy"
  - "%PYTHON%\\Scripts\\pip install scipy"

  # We need vcvarsall to build sundials
  - 'call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64'
  - 'call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64'
  # We need the additional solvers
  - "tools\\install_solvers.bat"

build: off

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  - "%PYTHON%\\python.exe setup.py install"
  - "%PYTHON%\\python.exe tools\\test.py"

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - "%PYTHON%\\python.exe setup.py bdist_wheel"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

