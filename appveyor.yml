environment:
  PYPIPASSWORD:
    secure: LmtnXHQhfACj8oOpwYehsFPkdhPHGLq84SIqn+ixfS8=
  matrix:
    # Windows w/64 bit python 3.7
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON: "C:\\Python37-x64"
      PYTHON_ARCH: "64"
    # Windows w/64 bit python 3.6
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON: "C:\\Python36-x64"
      PYTHON_ARCH: "64"
    # Windows w/64 bit python 3.6
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON: "C:\\Python35-x64"
      PYTHON_ARCH: "64"

    # Ubuntu - python 3
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      stack: python 3

install:
  # We need vcvarsall to build sundials
  - cmd: call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  # We need wheel installed to build wheels
  - sh: "python -m pip install -r requirements.txt" --user
  - cmd: "%PYTHON%\\Scripts\\pip install -r requirements.txt"


build_script:
  - cmd: "%PYTHON%\\python.exe setup.py install"
  - sh: "python setup.py install"


test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  - cmd: "%PYTHON%\\python.exe tools\\test.py"
  - sh: "python tools/test.py"


after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - cmd: "%PYTHON%\\python.exe setup.py bdist_wheel"
  - sh: "python3 setup.py sdist"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

